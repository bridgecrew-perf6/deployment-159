apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "ffmapserver.fullname" . }}-grafana
  labels:
    helm.sh/chart: {{ include "ffmapserver.chart" . }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/name: {{ include "ffmapserver.name" . }}-grafana
    app.kubernetes.io/instance: {{ .Release.Name }}
data:
  victoriametrics.yaml: |
    # config file version
    apiVersion: 1

    datasources:
      - name: Victoriametrics
        type: prometheus
        access: proxy
        uid: victoriametrics
        url: http://{{ include "ffmapserver.fullname" . }}-vmserver:8428
        isDefault: true
        editable: false
        version: 1
  dashboards.yaml: |
    apiVersion: 1

    providers:
      # https://grafana.com/docs/grafana/latest/administration/provisioning/#dashboards
      - name: 'dashboard_provisioner'
        # <int> Org id. Default to 1
        orgId: 1
        updateIntervalSeconds: 10
        allowUiUpdates: false
        options:
          path: /etc/grafana/provisioning/dashboards
          foldersFromFilesStructure: true
  nodes_public.json: |-
      {{ .Files.Get "grafana/nodes_public.json" | nindent 6 }}


---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "ffmapserver.fullname" . }}-grafana
  labels:
    helm.sh/chart: {{ include "ffmapserver.chart" . }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/name: {{ include "ffmapserver.name" . }}-grafana
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: 1
  serviceName: {{ include "ffmapserver.fullname" . }}-grafana
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "ffmapserver.name" . }}-grafana
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "ffmapserver.name" . }}-grafana
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: grafana
          image: "{{ .Values.grafana.image.repository }}:{{ .Values.grafana.image.tag }}"
          imagePullPolicy: {{ .Values.grafana.image.pullPolicy }}
          env:
            - name: GF_LOG_MODE
              value: console
            - name: GF_AUTH_ANONYMOUS_ENABLED
              value: "true"
            - name: GF_SERVER_ROOT_URL
              value: "%(protocol)s://%(domain)s:%(http_port)s/grafana/"
            - name: GF_SERVER_SERVE_FROM_SUB_PATH
              value: "true"
          ports:
            - name: http
              containerPort: 3000
          volumeMounts:
            - name: data
              mountPath: /var/lib/grafana
            - name: config
              subPath: victoriametrics.yaml
              mountPath: /etc/grafana/provisioning/datasources/victoriametrics.yaml
            - name: config
              subPath: dashboards.yaml
              mountPath: /etc/grafana/provisioning/dashboards/dashboards.yaml
            - name: config
              subPath: nodes_public.json
              mountPath: /etc/grafana/provisioning/dashboards/nodes_public.json
      volumes:
        - name: config
          configMap:
            name: {{ include "ffmapserver.fullname" . }}-grafana

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: "{{ .Values.grafana.persistentVolume.size }}"
      {{- if .Values.grafana.persistentVolume.storageClass }}
      {{- if (eq "-" .Values.grafana.persistentVolume.storageClass) }}
        storageClassName: ""
      {{- else }}
        storageClassName: "{{ .Values.grafana.persistentVolume.storageClass }}"
      {{- end }}
      {{- end }}
---

apiVersion: v1
kind: Service
metadata:
  name: {{ include "ffmapserver.fullname" . }}-grafana
  labels:
    helm.sh/chart: {{ include "ffmapserver.chart" . }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/name: {{ include "ffmapserver.name" . }}-grafana
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  ports:
  - port: 3000
    name: http
  selector:
      app.kubernetes.io/name: {{ include "ffmapserver.name" . }}-grafana
      app.kubernetes.io/instance: {{ .Release.Name }}

---

{{- if .Values.domain }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "ffmapserver.fullname" . }}-grafana
spec:
  rules:
    - host: {{ .Values.domain }}
      http:
        paths:
          - backend:
              service:
                name: {{ include "ffmapserver.fullname" . }}-grafana
                port:
                  number: 3000
            path: /grafana/
            pathType: Prefix
  tls:
    - hosts:
      - {{ .Values.domain }}
      secretName: {{ include "ffmapserver.fullname" . }}-tls
{{- end }}