apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "ffmapserver.fullname" . }}-renderer
  labels:
    helm.sh/chart: {{ include "ffmapserver.chart" . }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/name: {{ include "ffmapserver.name" . }}-renderer
    app.kubernetes.io/instance: {{ .Release.Name }}
data:
  config.toml: |
    [main]
    listen = ":80"
    prometheus-addr = "http://{{ include "ffmapserver.fullname" . }}-vmserver:8428"
    prometheus-path = "/api/v1/query_range"
    timeout = "10s"

    [template.default]
    areaAlpha = "0.09"
    areaMode = "all"
    bgcolor = "ffffff"
    fgcolor = "171819"
    colorList = "7EB26D,EAB839,6ED0E0,EF843C,E24D42,1F78C1,BA43A9,705DA0,508642,CCA300,447EBC,C15C17,890F02,0A437C,6D1F62,584477,B7DBAB,F4D598,70DBED,F9BA8F,F29191,82B5D8,E5A8E2,AEA2E0,629E51,E5AC0E,64B0C8,E0752D,BF1B00,0A50A1,962D82,614D93,9AC48A,F2C96D,65C5DB,F9934E,EA6460,5195CE,D683CE,806EB7,3F6833,967302,2F575E,99440A,58140C,052B51,511749,3F2B5B,E0F9D7,FCEACA,CFFAFF,F9E2D2,FCE2DE,BADFF4,F9D9F9,DEDAF7"
    fontName = "Roboto"
    majorGridLineColor = "666666"
    minorGridLineColor = "666666"
    fontSize = "12.0"
    lineWidth = "2.0"
    xFormat = "%H:%M"

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ffmapserver.fullname" . }}-renderer
  labels:
    helm.sh/chart: {{ include "ffmapserver.chart" . }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/name: {{ include "ffmapserver.name" . }}-renderer
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "ffmapserver.name" . }}-renderer
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "ffmapserver.name" . }}-renderer
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: renderer
          image: "{{ .Values.renderer.image.repository }}:{{ .Values.renderer.image.tag }}"
          imagePullPolicy: {{ .Values.renderer.image.pullPolicy }}
          args:
          - -config
          - /config/config.toml
          ports:
            - name: http
              containerPort: 80
          volumeMounts:
          - name: config
            mountPath: /config
      volumes:
        - name: config
          configMap:
            name: {{ include "ffmapserver.fullname" . }}-renderer

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

---

apiVersion: v1
kind: Service
metadata:
  name: {{ include "ffmapserver.fullname" . }}-renderer
  labels:
    helm.sh/chart: {{ include "ffmapserver.chart" . }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/name: {{ include "ffmapserver.name" . }}-renderer
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  ports:
  - port: 80
    name: http
  selector:
      app.kubernetes.io/name: {{ include "ffmapserver.name" . }}-renderer
      app.kubernetes.io/instance: {{ .Release.Name }}

---

{{- if .Values.domain }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "ffmapserver.fullname" . }}-renderer-clients
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: |
      /?g0.expr=max_over_time(node_clients.total%7Bnodeid=%22$1%22%7D[15m])&width=507&height=250&g0.legend=Clients%20(total)&yMin=0.0&yMin=0.0&minorY=0&yStep=1&valueLabels=none
spec:
  rules:
    - host: {{ .Values.domain }}
      http:
        paths:
          - backend:
              service:
                name: {{ include "ffmapserver.fullname" . }}-renderer
                port:
                  number: 80
            path: /render/clients/(.*)
            pathType: Prefix
  tls:
    - hosts:
      - {{ .Values.domain }}
      secretName: {{ include "ffmapserver.fullname" . }}-tls
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "ffmapserver.fullname" . }}-renderer-traffic
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: |
      /?g0.expr=irate(node_traffic.forward.bytes%7Bnodeid=%22$1%22%7D)&g1.expr=irate(node_traffic.rx.bytes%7Bnodeid=%22$1%22%7D)&g2.expr=irate(node_traffic.tx.bytes%7Bnodeid=%22$1%22%7D)&width=507&height=250&g0.legend=Traffic%20(forward)&g1.legend=Traffic%20(rx)&g2.legend=Traffic%20(tx)&unitSystem=binary
spec:
  rules:
    - host: {{ .Values.domain }}
      http:
        paths:
          - backend:
              service:
                name: {{ include "ffmapserver.fullname" . }}-renderer
                port:
                  number: 80
            path: /render/traffic/(.*)
            pathType: Prefix
  tls:
    - hosts:
      - {{ .Values.domain }}
      secretName: {{ include "ffmapserver.fullname" . }}-tls
{{- end}}